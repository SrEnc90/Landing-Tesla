---
import Logo from '../components/Logo.astro'
---

<header id="landing-header" class="fixed top-0 z-40 flex items-center justify-between w-full px-10 py-2">
    <div class="flex flex-grow basis-0">
        <Logo />
    </div>
    <nav>
        <ul class="flex text-sm [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:font-medium [&>li>a]:text-current [&>li>a]:transition-colors [&>li>a]:duration-500">
            <li><a href="#">Model S</a></li>
            <li><a href="#">Model 3</a></li>
            <li><a href="#">Model X</a></li>
            <li><a href="#">Model Y</a></li>
            <li><a href="#">Powerwall</a></li>
            <li><a href="#">Carga</a></li>
        </ul>
    </nav>

    <nav  class="flex justify-end flex-grow basis-0">
        <ul class="flex text-sm [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:font-medium [&>li>a]:py-2 [&>li>a]:text-current [&>li>a]:transition-colors [&>li>a]:duration-500">
            <li><a href="#">Soporte</a></li>
            <li><a href="#">Tienda</a></li>
            <li><a href="#">Cuenta</a></li>
            <li><a href="#">Menú</a></li>
        </ul>
    </nav>

    <!--! preferir siempre usar translate-x translate-y en vez del left y top(ver código comentado) -->    
    <!-- <div
        id="menu-backdrop"
        class={`
            absolute bg-black/5 backdrop-blur-lg rounded
            left-[var(--left)] top-[var(--top)]
            w-[var(--width)] h-[var(--height)]
            transition-all duration-300
            ease-in-out opacity-0 -z-10
        `}
    > -->
    <div
        id="menu-backdrop"
        class={`
            absolute bg-black/5 backdrop-blur-lg rounded
            translate-x-[var(--left)] translate-y-[var(--top)]
            left-0 top-0
            w-[var(--width)] h-[var(--height)]
            transition-all duration-500
            ease-in-out opacity-0 -z-10
        `}
    >
    </div>

</header>

<script>

    const listItem = document.querySelectorAll('#landing-header li');
    const menuBackDrop = document.querySelector('#menu-backdrop') as HTMLElement;

    listItem.forEach((item) => {
        item.addEventListener('mouseenter', () => { //dentro del objeto event, defrente estamos recuperando el target
            const { height, width, top, left } = item.getBoundingClientRect();
            menuBackDrop.style.setProperty("--left", `${left}px`);
            menuBackDrop.style.setProperty("--top", `${top}px`);
            menuBackDrop.style.setProperty("--width", `${width}px`);
            menuBackDrop.style.setProperty("--height", `${height}px`);
            menuBackDrop.style.opacity = '1';
            menuBackDrop.style.visibility = 'visible';

        })

        item.addEventListener('mouseleave', () => {
            menuBackDrop.style.opacity = '0';
            menuBackDrop.style.visibility = 'hidden';
        })
    });

</script>


<!-- Estamos usando el método llamado interception of server: nos permite detectar cuándo un elemento se encuentra dentro del viewport, cuál es su posición, cuánto trozo de ese elemento hay en el viewport -->
<script>

    const $header = document.querySelector('#landing-header') as HTMLElement; //! el $ en el $header, indica que es un elemento el DOM

    const observerOptions = {
        root: null, // Se refiere a cuándo se ingresa al viewport, cuándo se ve en pantalla
        rootMargin: '0px', // en cuanto se vea el elemento (ni bien se asoma el elemento, detectarlo)
        threshold: 0.90 // es el porcentaje de visibilidad (detectar cuándo la visibilidad del elemento emergente sea del 90% = 0.9, osea que ocupe ya casi todo el viewport)
    }

    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            const {isIntersecting} = entry
            if(isIntersecting) {
                const color = entry.target.getAttribute('data-header-color')
                $header.style.color = color;
            }
        });
    }, observerOptions)

    const $sections = document.querySelectorAll('.landing-section')

    $sections.forEach(section => observer.observe(section));

</script>